{
  pkgs,
  lib,
  ...
}: {
  virtualisation.oci-containers.containers."wyze-bridge" = {
    image = "mrlt8/wyze-bridge:latest";
    environment = {
      "API_ID" = "fc290edd-5df5-4c32-b05b-211b07b43a68";
      "API_KEY" = "Y92DfTEOhYNukoYWBiWcu9UWMKT55TsGIMLwy8C2syoQWSOh3Cihmdig7Y9u";
      "ENABLE_AUDIO" = "True";
      "ON_DEMAND" = "False";
      "SUBSTREAM" = "True";
      "WB_AUTH" = "True";
      "WB_PASSWORD" = "admin";
      "WB_USERNAME" = "admin";
      "WYZE_EMAIL" = "";
      "WYZE_PASSWORD" = "";
    };
    ports = [
      "1936:1935/tcp"
      "8554:8554/tcp"
      "8888:8888/tcp"
      "8889:8889/tcp"
      "8189:8189/udp"
      "5001:5000/tcp"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network-alias=wyze-bridge"
      "--network=wyzebridge_default"
    ];
  };
  systemd.services."podman-wyze-bridge" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
    };
    after = [
      "podman-network-wyzebridge_default.service"
    ];
    requires = [
      "podman-network-wyzebridge_default.service"
    ];
    partOf = [
      "podman-compose-wyzebridge-root.target"
    ];
    wantedBy = [
      "podman-compose-wyzebridge-root.target"
    ];
  };

  systemd.services."podman-network-wyzebridge_default" = {
    path = [pkgs.podman];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "podman network rm -f wyzebridge_default";
    };
    script = ''
      podman network inspect wyzebridge_default || podman network create wyzebridge_default
    '';
    partOf = ["podman-compose-wyzebridge-root.target"];
    wantedBy = ["podman-compose-wyzebridge-root.target"];
  };

  systemd.targets."podman-compose-wyzebridge-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = ["multi-user.target"];
  };
}
